#!/usr/bin/perl
use strict;
open(my $dictc,'>','src/dict.c');
open(my $dicth,'>','src/dict.h');
print $dicth
"#ifndef DICTIONARY_H\
#define DICTIONARY_H\
#include \"stack.h\"\
#define FUNCTION_OBJ(x) {.type=FUNCTION,.car=(long)x,.cdr=-1,.refs=-1}\
#define CONS_OBJ(x,y) {.type=CELL,.car=(long)x,.cdr=(long)y,.refs=-1}\n";
print $dictc "#include \"dict.h\"\n";
my @alphabet=('a'..'z');
my $last='NIL_OBJ';
for (@ARGV) {
	$_=~s/^src\///;
	print $dicth "#include \"$_\"\n";
	open(my $file,'<',"src/$_") or die "src/$_ does not exist\n";
	while (my $line = <$file>) {
		my ($lname,$argc,$cname)=($line=~/core\((.*),([0-9]+)\) ([^(]+)/g) or next;
		print $dicth "void s_",lc $cname,"();\n";
		print $dictc "void s_",lc $cname,"()\n{\n";
		print $dictc "\tobj_t *$_=pop();\n" for (@alphabet[0..$argc-1]);
		print $dictc "\tpush($cname(";
		for (0..$argc-1) {
			print $dictc $alphabet[$argc-1-$_];
			print $dictc ',' if ($_<$argc-1);
		}
		print $dictc "));\n";
		print $dictc "\tdec_rc($alphabet[$argc-1-$_]);\n" for (0..$argc-1);
		print $dictc "}\n";
		print $dictc "obj_t ${cname}_sym=CONSTANT($lname);\n";
	#	print $dicth "extern obj_t ${cname}_sym;\n";
		print $dictc "obj_t ${cname}_fun=FUNCTION_OBJ(&s_",lc $cname,");\n";
		print $dictc "obj_t ${cname}_def=CONS_OBJ(&${cname}_sym,&${cname}_fun);\n";
		print $dictc "obj_t ${cname}_dcell=CONS_OBJ(&${cname}_def,&$last);\n";
		$last="${cname}_dcell";
	}
	close($file);
}
print $dicth "extern obj_t *DICT;\n";
print $dictc "obj_t *DICT=&$last;\n";
print $dicth "#endif\n";
close($dictc);
close($dicth);
